


export PATH=${PWD}/../bin:$PATH
export FABRIC_CFG_PATH=$PWD/../config/


environment variable for org1

export CORE_PEER_TLS_ENABLED=true
export CORE_PEER_LOCALMSPID="Org1MSP"
export CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt //refer to org1 peer ca certificate
export CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp //refer to org1 peer msp material
export CORE_PEER_ADDRESS=localhost:7051


// package chaincode 

peer lifecycle chaincode package property.tar.gz --path ../chaincode/property-app/go/ --lang golang --label property_1

// install package on org1

 peer lifecycle chaincode install property.tar.gz --peerAddresses localhost:7051
 or 
 peer lifecycle chaincode install property.tar.gz --peerAddresses localhost:7051 --tlsRootCertFiles $CORE_PEER_TLS_ROOTCERT_FILE

response :identifier: property_1:dac72f2270d789c6b4e75b69aae4b2c8ab9a7e6f6d83f202213d03430755400a

// install package on org2
 peer lifecycle chaincode install property.tar.gz --peerAddresses localhost:9051 --tlsRootCertFiles $CORE_PEER_TLS_ROOTCERT_FILE

 reponse : identifier: property_1:dac72f2270d789c6b4e75b69aae4b2c8ab9a7e6f6d83f202213d03430755400a

//query the package

peer lifecycle chaincode queryinstalled --peerAddresses localhost:7051 --tlsRootCertFiles $CORE_PEER_TLS_ROOTCERT_FILE   // or org1

//get an install package from peer
peer lifecycle chaincode getinstalledpackage --package-id property_1:dac72f2270d789c6b4e75b69aae4b2c8ab9a7e6f6d83f202213d03430755400a --output-directory . --peerAddresses localhost:9051 --tlsRootCertFiles $CORE_PEER_TLS_ROOTCERT_FILE

// approve chaincode -- kollaei edw 
peer lifecycle chaincode approveformyorg -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile $ORDERER_CA --channelID testchannel1 --name property --version 1.0 --package-id property_1:dac72f2270d789c6b4e75b69aae4b2c8ab9a7e6f6d83f202213d03430755400a --sequence 1

//get if i can commit chaincode
peer lifecycle chaincode checkcommitreadiness -o localhost:7050 --channelID testchannel --name property --version 1.0 --sequence 1 --output json

//commit chaincode
peer lifecycle chaincode commit -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA --channelID testchannel --name property --peerAddresses localhost:7051 --tlsRootCertFiles $CORE_PEER_TLS_ROOTCERT_FILE_ORG1 --peerAddresses localhost:9051 --tlsRootCertFiles $CORE_PEER_TLS_ROOTCERT_FILE_ORG2 --version 1.0 --sequence 1

//query commited chaincode
peer lifecycle chaincode querycommitted --channelID testchannel --name property

//access chaincode functions

peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -C testchannel -n property --peerAddresses localhost:7051 --tlsRootCertFiles $CORE_PEER_TLS_ROOTCERT_FILE_ORG1 --peerAddresses localhost:9051 --tlsRootCertFiles $CORE_PEER_TLS_ROOTCERT_FILE_ORG2 --isInit -c '{"Args":[]}'

//add data
peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -C testchannel -n property --peerAddresses localhost:7051 --tlsRootCertFiles $CORE_PEER_TLS_ROOTCERT_FILE_ORG1 --peerAddresses localhost:9051 --tlsRootCertFiles $CORE_PEER_TLS_ROOTCERT_FILE_ORG2 -c '{"Args":["addProperty", "1", "Property1","1000","John","1000"]}'
